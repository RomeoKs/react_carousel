{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","useState","value","setValue","handleRadioChange","event","target","className","type","map","image","src","alt","htmlFor","id","min","max","name","checked","onChange","App","length","ReactDOM","render","document","getElementById"],"mappings":"mMA+GeA,EAxGmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnC,EAA0BC,mBAAS,SAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAoB,SAACC,GACzBF,EAASE,EAAMC,OAAOJ,QAGxB,OACE,sBAAKK,UAAU,WAAf,UACE,sBAAKA,UAAU,sBAAf,UACE,wBACEC,KAAK,SACLD,UAAU,qBAFZ,SAIG,MAEH,qBAAKA,UAAU,iBAAf,SACE,oBAAIA,UAAU,kBAAd,SACGP,EAAOS,KAAI,SAAAC,GAAK,OACf,6BACE,qBAAKC,IAAKD,EAAOE,IAAI,OADdF,UAMf,wBACEF,KAAK,SACLD,UAAU,qBACV,UAAQ,OAHV,SAKG,SAGL,sBAAKA,UAAU,2BAAf,UACE,wBAAOM,QAAQ,YAAf,6BAEE,uBACEL,KAAK,SACLM,GAAG,YACHC,IAAI,MACJC,IAAI,WAIR,wBAAOH,QAAQ,YAAf,4BAEE,uBACEL,KAAK,SACLM,GAAG,YACHC,IAAI,IACJC,IAAI,SAIR,wBAAOH,QAAQ,SAAf,kBAEE,uBACEL,KAAK,SACLM,GAAG,SACHC,IAAI,IACJC,IAAI,SAIR,wBAAOH,QAAQ,oBAAf,qCAEE,uBACEL,KAAK,SACLM,GAAG,oBACHC,IAAI,MACJC,IAAI,YAGR,sBAAKT,UAAU,0BAAf,+BAEE,wBAAOM,QAAQ,uBAAf,UACE,uBACEL,KAAK,QACLS,KAAK,mBACLH,GAAG,uBACHZ,MAAM,OACNgB,QAAmB,SAAVhB,EACTiB,SAAUf,IAPd,SAWA,wBAAOS,QAAQ,wBAAf,UACE,uBACEL,KAAK,QACLS,KAAK,mBACLH,GAAG,wBACHZ,MAAM,QACNgB,QAAmB,UAAVhB,EACTiB,SAAUf,IAPd,kBCjEKgB,EAxBH,WACV,MAAiBnB,mBAAS,CACxB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,iBAVKD,EAAP,oBAaA,OACE,sBAAKO,UAAU,MAAf,UAEE,qBAAIA,UAAU,aAAa,UAAQ,QAAnC,2BAA0DP,EAAOqB,OAAjE,aAEA,cAAC,EAAD,CAAUrB,OAAQA,QCpBxBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.e7db4a82.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport '../styles/Carousel.scss';\n\ntype Props = {\n  images: string[];\n};\n\nconst Carousel: React.FC<Props> = ({ images }) => {\n  const [value, setValue] = useState('false');\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__container\">\n        <button\n          type=\"button\"\n          className=\"button button-prev\"\n        >\n          {'<'}\n        </button>\n        <div className=\"Carousel__list\">\n          <ul className=\"Carousel__items\">\n            {images.map(image => (\n              <li key={image}>\n                <img src={image} alt=\"1\" />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button button-next\"\n          data-cy=\"next\"\n        >\n          {'>'}\n        </button>\n      </div>\n      <div className=\"inputs inputs__container\">\n        <label htmlFor=\"itemWidth\">\n          Item width (px):\n          <input\n            type=\"number\"\n            id=\"itemWidth\"\n            min=\"100\"\n            max=\"200\"\n          />\n        </label>\n\n        <label htmlFor=\"frameSize\">\n          Items in frame:\n          <input\n            type=\"number\"\n            id=\"frameSize\"\n            min=\"1\"\n            max=\"5\"\n          />\n        </label>\n\n        <label htmlFor=\"stepId\">\n          Step:\n          <input\n            type=\"number\"\n            id=\"stepId\"\n            min=\"1\"\n            max=\"5\"\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\">\n          Animation Duration (ms):\n          <input\n            type=\"number\"\n            id=\"animationDuration\"\n            min=\"100\"\n            max=\"1000\"\n          />\n        </label>\n        <div className=\"inputs__container-radio\">\n          Infinite rotation:\n          <label htmlFor=\"infiniteRotationTrue\">\n            <input\n              type=\"radio\"\n              name=\"infiniteRotation\"\n              id=\"infiniteRotationTrue\"\n              value=\"true\"\n              checked={value === 'true'}\n              onChange={handleRadioChange}\n            />\n            Yes\n          </label>\n          <label htmlFor=\"infiniteRotationFalse\">\n            <input\n              type=\"radio\"\n              name=\"infiniteRotation\"\n              id=\"infiniteRotationFalse\"\n              value=\"false\"\n              checked={value === 'false'}\n              onChange={handleRadioChange}\n            />\n            No\n          </label>\n        </div>\n\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport './styles/App.scss';\nimport Carousel from './components/Carousel';\n\nconst App = () => {\n  const [images] = useState([\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ]);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 className=\"App__title\" data-cy=\"title\">Carousel with {images.length} images</h1>\n\n      <Carousel images={images} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}